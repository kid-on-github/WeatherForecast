{"version":3,"sources":["components/Summary.js","components/Days.js","components/Accessories.js","components/WeatherData.js","components/Input.js","App.js","index.js"],"names":["Summary","props","city","overallHigh","overallLow","id","name","country","Math","round","DayRow","date","high","low","temps","averageTemp","reduce","sum","curr","length","img","className","replace","src","Days","days","Object","keys","map","key","Accessories","hot","cold","WeatherData","state","this","fetch","then","response","json","data","cod","list","error","weather","temp","main","dt_txt","split","push","getWeather","setState","msg","summary","accessories","React","Component","Message","Input","useState","setCity","type","placeholder","defaultValue","onChange","e","target","value","href","App","URLSearchParams","window","location","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fedf4b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// show a summary of the overall lows and highs\r\nfunction Summary(props){\r\n    const {city, overallHigh, overallLow} = props\r\n    return(\r\n        <div id='Summary'>\r\n        <h1>{city.name}, {city.country}</h1>\r\n        <h5>Weather Forecast</h5>\r\n        <h5>Next 120 Hours (5 days)</h5>\r\n        <br/>\r\n        <p>High: {Math.round(overallHigh)}&deg;</p>\r\n        <p>Low: {Math.round(overallLow)}&deg;</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\n\r\n// display the weather forecast\r\nfunction Days(props){\r\n    const {days} = props\r\n    return Object.keys(days).map(\r\n        date => {\r\n            const {high, low, temps} = days[date]\r\n\r\n            // only show days with multiple data points\r\n            return (temps.length > 1) ? <DayRow date={date} high={high} low={low} temps={temps} key={date}/> : ''\r\n        }\r\n    )\r\n  }\r\n  \r\n\r\n// display the summary of one day's weather forecast\r\nfunction DayRow(props){\r\n    const {date, high, low, temps} = props\r\n    const averageTemp = temps.reduce((sum, curr) => sum + curr) / temps.length\r\n  \r\n    \r\n    // decide which set of clothes to display\r\n    let img = 'cool.png'\r\n    if      (averageTemp <= 55) img = 'chill.png'\r\n    else if (averageTemp >= 75) img = 'warm.png'\r\n    \r\n    return (\r\n      <div className='DayRow'>\r\n        <p>\r\n          <span className='subTitle'>{date.replace(/-/g,'.')}</span> \r\n          <br/> \r\n          {Math.round(low)}&deg; - {Math.round(high)}&deg;\r\n        </p>\r\n        <img src={`/images/${img}`}/>\r\n      </div>\r\n    )\r\n}\r\n  \r\nexport default Days;\r\n","import React from 'react';\r\n\r\n// Don't forget your coat!\r\nfunction Accessories(props){\r\n    const {overallHigh, overallLow} = props\r\n    const hot = overallHigh >= 80 ? <img src='/images/hot.png'/> : ''\r\n    const cold = overallLow <= 50 ? <img src='/images/cold.png'/> : ''\r\n    \r\n    if (hot || cold){\r\n      return (\r\n        <div id='Accessories'>\r\n          <p className='subTitle'> Don't <br/> Forget</p>\r\n          {hot}\r\n          {cold}\r\n        </div>\r\n      )\r\n    }\r\n  \r\n    return <br/>\r\n  }\r\n  \r\n  export default Accessories;\r\n  ","import React from 'react';\r\nimport Summary from './Summary';\r\nimport Days from './Days';\r\nimport Accessories from './Accessories';\r\n\r\n\r\nclass WeatherData extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentWillMount(){\r\n    const {city} = this.props\r\n    \r\n    // is a city specified?\r\n    if (city){\r\n      // get data from API\r\n      getWeather(city)\r\n        .then(\r\n          data => data.error \r\n            ? this.setState({error:data.error})\r\n            : this.setState(data)\r\n        )\r\n    }\r\n    else {\r\n      this.setState({error:'What city do you want a forecast for?'})\r\n    }\r\n  }\r\n  \r\n  render(){\r\n    // display error\r\n    if (this.state.error) return <Message msg={this.state.error}/>\r\n    \r\n    // everything seems to be working\r\n    const {city, overallHigh, overallLow, days} = this.state\r\n    let summary, weather, accessories\r\n\r\n    // make sure we have all the data\r\n    if (overallHigh && overallLow){\r\n      accessories = <Accessories overallHigh={overallHigh} overallLow={overallLow}/>\r\n      summary = city && <Summary city={city} overallHigh={overallHigh} overallLow={overallLow}/>\r\n    }\r\n\r\n    weather = days && <Days days={days}/>\r\n\r\n    // only show weather if we have data to display\r\n    return (summary && weather && accessories) \r\n      ? <div> {summary} {weather} {accessories} </div>\r\n      : ''\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// used for errors and prompts\r\nconst Message = (props) => <div id='Message'><p>{props.msg}</p></div>\r\n\r\n\r\n\r\n\r\n// this function is used to fetch data from the openweathermap API\r\nfunction getWeather(city){\r\n    return fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=imperial&appid=438c51ac9dbc5e33f3e04f8753d44484`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const {cod, list, city} = data\r\n        \r\n        // handle known API errors\r\n        if (cod === '404') return {error:'City Not Found'}\r\n        if (cod !== '200') return {error:`API ERROR: cod: ${cod}`}\r\n        \r\n        // variables to store final weather data\r\n        let days = {}\r\n        let overallHigh = -1000\r\n        let overallLow = 1000\r\n  \r\n        // loop through data points and restructure data\r\n        list.map(\r\n          weather => {\r\n            const {temp} = weather.main\r\n            const {dt_txt} = weather\r\n            const date = dt_txt.split(' ')[0]\r\n  \r\n  \r\n            if (temp > overallHigh) overallHigh = temp\r\n            if (temp < overallLow) overallLow = temp\r\n            if (!(date in days)) days[date] = { high: temp, low: temp, temps: [temp] }\r\n\r\n            else {\r\n              if (temp > days[date].high) days[date].high = temp\r\n              else if (temp < days[date].low) days[date].low = temp\r\n              days[date].temps.push(temp)\r\n            }\r\n          }\r\n        )\r\n        \r\n        // return weather data\r\n        return {\r\n          city:city,\r\n          overallHigh:overallHigh,\r\n          overallLow:overallLow,\r\n          days:days\r\n        }\r\n      })\r\n  }\r\n\r\nexport default WeatherData;\r\n","import React, { useState } from 'react';\r\n\r\n// get user input\r\nfunction Input(props){\r\n    const [city, setCity] = useState(props.city)\r\n    return (\r\n      <div id='Input'>\r\n        <input \r\n          id=\"city\" \r\n          type=\"text\" \r\n          placeholder=\"City\" \r\n          defaultValue={city} \r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n        \r\n        <span id='link'>\r\n          <a href={`WeatherForecast?city=${city}`}>Check Weather</a>\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Input;","import React from 'react';\r\nimport WeatherData from './components/WeatherData';\r\nimport Input from './components/Input';\r\n\r\nfunction App(){\r\n  // get city from url\r\n  const params = new URLSearchParams(window.location.search)\r\n  const city = params.get('city')\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Input city={city}/>\r\n      <WeatherData city={city}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}